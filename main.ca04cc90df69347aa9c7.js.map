{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/images sync nonrecursive \\.(png|jpe","webpack:///./src/modules lazy ^\\.\\/.*\\/module$ namespace object","webpack:///./src/images/index.js","webpack:///./src/modules/ExampleRoot/root.js","webpack:///./src/conf.js","webpack:///./src/index.js","webpack:///./src/onedeck/observ.js","webpack:///./src/onedeck/module.js","webpack:///./src/onedeck/store.js","webpack:///./src/onedeck/router.js","webpack:///./src/onedeck/core.js","webpack:///./src/onedeck/root.module.js","webpack:///./src/onedeck/index.js"],"names":["require","Root","test1","test3","test4","test2","test5","test6","token","path","$$gstore","watchers","add","data","console","log","state","eventHandler","$$on","exampleData","exampleAction","text","module","layout","Onedeck","RootModule","historyApi","apiUrl","API_PREFIX","version","VERSION","rootPath","ROOT_PATH","rootModule","ExampleRoot","mainModule","module404","rootElementId","modules","reactApp","mountId","name","icon","info","Config","Observable","_listeners","channel","cb","eventProperty","isOnOnce","push","on","filter","listener","error","forEach","$$off","extendObj","$$onOnce","$$emit","Module","instances","constructor","Watchers","Store","Proxy","get","target","set","obj","prop","value","emit","newValue","oldValue","has","key","Route","core","urlState","$$config","window","addEventListener","event","urlData","getModuleFromUrl","document","location","pathname","search","initModule","url","queryParam","params","hash","replace","routeData","pushState","split","urlParam","param","val","moduleData","history","Core","root","initGlobalModules","globalNames","Object","keys","moduleName","global","i","length","createModule","moduleConf","_import","ModuleClass","SyntaxError","$$global","$$route","router","route","bind","$$gemit","$$mountId","$$rootElementId","$$layoutName","$$embed","embed","embedNames","EmbedClass","init","createLayout","layoutName","layouts","LayoutClass","mudules","$$currentLayout","dispatcher","destroyModule","destroyLayout","$$currentModule","dispatcherModule","mounted","Router","Stroe","initState","_clear","then","Promise","resolve","scripts","querySelectorAll","body","innerHTML","NodeList","prototype","isPrototypeOf","s","appendChild","destroy","config"],"mappings":";AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAQ,oBAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAiB,4BAA4B;AAC7C;AACA;AACA,0BAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,kDAA0C;AAC1C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA,4BAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,2BAAmB,6BAA6B;AAChD;AACA;AACA;AACA;AACA;AACA,2BAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAK;AACL;AACA,aAAK;AACL;;AAEA;;AAEA;AACA,yCAAiC;;AAEjC;AACA;AACA;AACA,aAAK;AACL;AACA;AACA;AACA,cAAM;AACN;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAwB,kCAAkC;AAC1D,cAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA,kDAA0C,oBAAoB,WAAW;;AAEzE;AACA;AACA;AACA;AACA,wBAAgB,uBAAuB;AACvC;;;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACtQA;AACA;AACA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA,6B;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;AC3EeA,uEAAf,E;;;;;;;;;;;;;;;;;;;;;;;ACAA;;;AAGA;AACA;AACA;CAEA;AACA;AACA;AACA;;IAEqBC,I;;;;;;;;;;;;;gCACP;AACV,aAAO;AACLC,aAAK,EAAE;AACLC,eAAK,EAAE,IADF;AAELC,eAAK,EAAE;AAFF,SADF;AAKLC,aAAK,EAAE;AACLC,eAAK,EAAE,IADF;AAELC,eAAK,EAAE;AAFF,SALF;AASLC,aAAK,EAAE;AATF,OAAP;AAWD;;;yBAEIC,I,EAAM;AAET;AACA;AACA,WAAKC,QAAL,CAAcC,QAAd,CAAuBT,KAAvB,CAA6BU,GAA7B,CAAiC,MAAjC,EAAyC,UAACC,IAAD,EAAU;AACjDC,eAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,OAFD,EAJS,CAQT;;AACA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","file":"main.ca04cc90df69347aa9c7.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t1: 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({}[chunkId]||chunkId) + \".\" + \"ca04cc90df69347aa9c7\" + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"\" + chunkId + \".style.\" + \"ca04cc90df69347aa9c7\" + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([128,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 315;","var map = {\n\t\"./ExampleAuth/module\": [\n\t\t349,\n\t\t0,\n\t\t4\n\t],\n\t\"./ExampleEmbed/module\": [\n\t\t340,\n\t\t0,\n\t\t3\n\t],\n\t\"./ExampleEmbedGlobal/module\": [\n\t\t348,\n\t\t0,\n\t\t5\n\t],\n\t\"./ExampleError404/module\": [\n\t\t350,\n\t\t0,\n\t\t6\n\t],\n\t\"./ExampleGlobalWnd/module\": [\n\t\t353,\n\t\t0,\n\t\t10\n\t],\n\t\"./ExampleLayoutVue/module\": [\n\t\t351,\n\t\t0,\n\t\t11\n\t],\n\t\"./ExampleLayoutWebix/module\": [\n\t\t352,\n\t\t0,\n\t\t7\n\t],\n\t\"./ExampleNotification/module\": [\n\t\t342,\n\t\t0,\n\t\t8\n\t],\n\t\"./ExampleReact/module\": [\n\t\t347,\n\t\t0,\n\t\t2\n\t],\n\t\"./ExampleVue/module\": [\n\t\t341,\n\t\t0,\n\t\t9\n\t],\n\t\"./ExampleWebix/module\": [\n\t\t354,\n\t\t0,\n\t\t12\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 316;\nmodule.exports = webpackAsyncContext;","export default require.context('./', false, /\\.(png|jpe?g|svg)$/);\n","/**\n * Class Root\n */\n// import 'webix/webix.css';\n// import 'webix/skins/mini.min.css';\n// import * as webix from 'webix';\nimport Onedeck from 'onedeck';\n// import axios from 'axios';\n// import ExampleNotification from 'ExampleNotification/module';\n// import ExampleGlobalWnd from 'ExampleGlobalWnd/module';\n// import QuasarConfif from './quasar.config';\n\nexport default class Root extends Onedeck.RootModule {\n  initState() {\n    return {\n      test1: {\n        test3: null,\n        test4: null,\n      },\n      test2: {\n        test5: null,\n        test6: null,\n      },\n      token: 'asdasdsdasdas',\n    };\n  }\n\n  init(path) {\n\n    // QuasarConfif();\n    // console.log('init', this.constructor.name, path);\n    this.$$gstore.watchers.test1.add('test', (data) => {\n      console.log(data);\n    });\n\n    //  this.$$gstore.watchers.test1.remove('test');\n    this.$$gstore.state.test1 = '23233222332';\n    this.eventHandler();\n    // this.wnd = new ExampleGlobalWnd();\n    // this.notify = new ExampleNotification();\n  }\n\n  eventHandler() {\n    // webix.attachEvent('onAjaxError', this.ajaxError);\n\n    // axios.interceptors.response.use(undefined, (error) => {\n    //   this.ajaxError('Request error');\n    //   return Promise.reject(error);\n    // });\n\n    this.$$on('examplEvent', (exampleData) => {\n      this.exampleAction(exampleData);\n    });\n\n    this.$$on('showGlobalWnd', () => {\n      // this.wnd.show();\n    });\n\n    this.$$on('notify', (text) => {\n      // this.notify.notify(text);\n    });\n  }\n\n  dispatcher(path, state) {\n    // console.log('dispatcher', this.constructor.name, path, state);\n  }\n\n  mounted(module, layout) {\n    // console.log('mounted', this.constructor.name, module, layout);\n  }\n\n  exampleAction(exampleData) {\n    // webix.confirm({\n    //   title: 'EXAMPLE EVENT',\n    //   ok: 'Yes',\n    //   cancel: 'No',\n    //   type: 'confirm-error',\n    //   text: `exampleData: ${exampleData}`,\n    // });\n  }\n\n  ajaxError(text) {\n    // webix.confirm({\n    //   title: 'SERVER ERROR',\n    //   ok: 'Yes',\n    //   width: 630,\n    //   cancel: 'No',\n    //   type: 'confirm-error',\n    //   text: text || 'Please reload the page',\n    //   callback: (result) => {\n    //     if (result) {\n    //       document.location.reload(true);\n    //     }\n    //   },\n    // });\n  }\n}\n","import ExampleRoot from 'ExampleRoot/root';\n\nexport default {\n  historyApi: true,\n  apiUrl: API_PREFIX,\n  version: VERSION,\n  rootPath: ROOT_PATH, // корневой путь для приложения\n  rootModule: ExampleRoot,\n  mainModule: 'reactApp',\n  module404: 'notfound',\n  rootElementId: 'ROOT',\n  import: async (module) => await import(`./modules/${module}/module`),\n  modules: {\n    // auth: {\n    //   mountId: 'ROOT',\n    //   module: 'ExampleAuth',\n    //   name: 'Auth page',\n    //   icon: 'fa-camera',\n    // },\n    // main: {\n    //   layout: 'ExampleLayoutVue',\n    //   mountId: 'MainContent',\n    //   module: 'ExampleVue',\n    //   name: 'Webix App',\n    //   icon: 'fa-camera',\n    //   embed: {\n    //     example: {\n    //       mountId: 'Embed',\n    //       module: 'ExampleEmbed',\n    //     },\n    //   },\n    // },\n    // vueApp: {\n    //   layout: 'ExampleLayoutWebix',\n    //   module: 'ExampleVue',\n    //   mountId: 'ExampleWebix',\n    //   name: 'Vue App',\n    //   icon: 'mdi-watch-import-variant',\n    //   embed: {\n    //     example: {\n    //       mountId: 'Embed',\n    //       module: 'ExampleEmbed',\n    //     },\n    //   },\n    // },\n    reactApp: {\n     //  layout: 'ExampleLayoutVue',\n      module: 'ExampleReact',\n      mountId: 'ROOT',\n      name: 'React App',\n      icon: 'fa-address-book',\n    },\n    // notfound: {\n    //   mountId: 'MainContent',\n    //   layout: 'ExampleLayoutWebix',\n    //   module: 'ExampleError404',\n    //   name: 'Not found page',\n    //   icon: 'fa-address-book',\n    // },\n    // globalwnd: {\n    //   global: true,\n    //   module: 'ExampleGlobalWnd',\n    //   icon: 'fa-address-book',\n    //   embed: {\n    //     example: {\n    //       mountId: 'EmbedWnd',\n    //       module: 'ExampleEmbedGlobal',\n    //     },\n    //   },\n    // },\n    // globalnotification: {\n    //   global: true,\n    //   module: 'ExampleNotification',\n    //   icon: 'fa-address-book',\n    // },\n  },\n};\n","import 'Images';\nimport Config from './conf';\nimport ExampleRoot from 'ExampleRoot/root';\n\nconsole.info('version: ', Config.version);\n// eslint-disable-next-line\nnew ExampleRoot(Config);","export default class Observable {\n  /**\n   * Класс реализует паттерн [Наблюдатель (Observer)]{@link https://refactoring.guru/ru/design-patterns/observer}. </br>\n   * Является родителем для классов Modle и RootModule.\n   * @Module Observable\n   */\n  constructor() {\n    this._listeners = {};\n  }\n\n  /**\n   * Подписаться на событие\n   * @example\n   * const cbName = (data) => console.log(data)\n   * this.$$on('onEventName', cbName)\n   *\n   * @param {string} channel - название события.\n   * @param {function} cb - callback функция.\n   */\n  $$on(channel, cb) {\n    if (!this._listeners[channel]) {\n      this._listeners[channel] = {};\n      this._listeners[channel].eventProperty = {};\n      this._listeners[channel].eventProperty.isOnOnce = false;\n      this._listeners[channel].data = [];\n    }\n    this._listeners[channel].data.push(cb);\n  }\n\n  /**\n   * Подписаться на событие которое выполниться только 1 раз\n   * @example\n   * const cbName = (data) => console.log(data)\n   * this.$$onOnce('onEventName', cbName)\n   *\n   * @param {string} channel - название события.\n   * @param {function} cb - callback функция.\n   */\n  $$onOnce(channel, cb) {\n    this.on(channel, cb);\n    this._listeners[channel].eventProperty.isOnOnce = true;\n  }\n\n  /**\n   * Отписаться от события\n   * @example\n   * this.$$off('onEventName', cbName)\n   *\n   * @param {string} channel - название события.\n   * @param {function} cb - callback функция.\n   */\n  $$off(channel, cb) {\n    this._listeners[channel].data = this._listeners[channel].data.filter(\n      (listener) => listener !== cb,\n    );\n  }\n\n  /**\n   * Отписаться от всех событий\n   * @example\n   * this.$$offAll()\n   */\n  $$offAll() {\n    this._listeners = {};\n  }\n\n  /**\n   * Опубликовать событие\n   * @example\n   * this.$$emit('onEventName', data)\n   *\n   * @param {string} channel - название события.\n   * @param {Object} data - данные события.\n   */\n  $$emit(channel, data) {\n    if (!this._listeners[channel] || !this._listeners[channel].data) {\n      console.error('No such event:', channel);\n      return;\n    }\n\n    this._listeners[channel].data.forEach((listener) => {\n      if (this._listeners[channel].eventProperty.isOnOnce) {\n        this.$$off(channel, this._listeners[channel].data[0]);\n      }\n      listener(data);\n    });\n  }\n\n  /**\n   * Расширить объект для реализации паттерна наблюдатель\n   * @example\n   * const observ = new Observable()\n   * observ.install(object)\n   *\n   * @param {Object} extendObj - объект который необходимо расширть\n   */\n  install(extendObj) {\n    extendObj._listeners = this._listeners;\n    extendObj.$$on = this.$$on;\n    extendObj.$$off = this.$$off;\n    extendObj.$$onOnce = this.$$onOnce;\n    extendObj.$$emit = this.$$emit;\n  }\n}\n","import Observable from './observ';\n\nexport default class Module extends Observable {\n  /**\n   * Класс является родителем для всех модулей кроме главного модуля (Root Module). </br>\n   * Наследуется от класса Observable для реализации паттерна [Наблюдатель (Observer)]{@link https://refactoring.guru/ru/design-patterns/observer}. </br>\n   * Объект модуля реализует паттерн [Одиночка (Singleton)]{@link https://refactoring.guru/ru/design-patterns/singleton}. </br>\n   * Каждый модуль создается только 1 раз, последующий вызов new Module() - вернет текущий экзепляр данного класса.\n   * @example <caption>Пример создания модуля</caption>\n   * import Onedeck from 'onedeck';\n   *\n   * export default class ModuleName extends Onedeck.Module { ... }\n   *\n   * @example <caption>Пример получения экземпляра модуля</caption>\n   * import Module from 'ModuleName/module.js'\n   * const module = new Module()\n   * // Событие уровня модуля\n   * module.$$emit('eventName', data)\n   * // Событие уровня приложения\n   * module.$$gemit('eventName', data)\n   *\n   * @Module Module\n   */\n  constructor() {\n    super();\n    /**\n     * Объект содержит в себе инстансы всех моулей\n     * Модуль создается только 1 раз\n     * @static\n     */\n    Module.instances = Module.instances || {};\n\n    if (Module.instances[this.constructor.name]) {\n      return Module.instances[this.constructor.name];\n    }\n\n    Module.instances[this.constructor.name] = this;\n  }\n\n  /**\n   * Абстрактный метод. Обработчик событий. </br>\n   * В этом методе должны быть описаны все события текущего моудля. </br>\n   *\n   * @example\n   * eventHandler () {\n   *   // Cоздаем событие уровня модуля в котором эмитим событие уровня приложения\n   *   this.$on('event1', (data) => this.$$gemit(data));\n   *   // Cоздаем событие уровня модуля в котором выполняем метод doSomething\n   *   this.$on('event2', (data) => this.doSomething(data));\n   * }\n   * @abstract\n   */\n  eventHandler() { }\n\n  /**\n   * Абстрактный метод. Инициализация приложения модуля. </br>\n   * В этом методе должна быть описана инициализация приложения модуля. </br>\n   * Метод автоматически вызывается для каждого модуля старницы при переходе на страницу модуля. </br>\n   * Для Global модуля, и для Embed модулей которые встороенные в Global - вызыввается только 1 раз, при инициализации приложения. </br>\n   * Вызывается в следующем порядке: </br>\n   * - init Layout модуля если на старнице меняется Layout </br>\n   * - init Page модуля </br>\n   * - init Embed модулей в произвольном порядке </br>\n   *\n   * @example\n   * init (path, state) {\n   *   console.log('init', this.constructor.name, path, state);\n   *   // Создаем приложение модуля\n   *   this.reactApp = ReactDOM.render(<App />, document.getElementById('MainContent'));\n   *   // Вызываем обработчик событий\n   *   this.eventHandler();\n   * }\n   *\n   * @param {Array} path - массив с элементами url адреса.\n   * @param {Object} state - данные переданные с url.\n   * @abstract\n   */\n  init() { }\n\n  /**\n   * Абстрактный метод. Деструктор. </br>\n   * В этом методе должна быть описана деструктуризация модуля. </br>\n   * Метод автоматически вызывается для каждого модуля старницы при переходе на другую старницу приложнеия. </br>\n   * Для Global модуля - дестуркторизация не производится. </br>\n   *\n   * @example\n   * destroy () {\n   *   // Отписываемся от всех событий уровня модуля\n   *   this.$$offAll()\n   *\n   *   ReactDOM.unmountComponentAtNode(document.getElementById('MainContent'));\n   * }\n   * @abstract\n   */\n  destroy() { }\n\n  /**\n   * Абстрактный метод. Диспетчер. </br>\n   * В этом методе должна быть описана логика модуля связанная с маршрутизацией. </br>\n   * Метод автоматически вызывается для каждого модуля при изменении url адреса. </br>\n   * Вызывается в следующем порядке: </br>\n   * - dispatcher Root модуля </br>\n   * - dispatcher всех Global модулей в произвольном порядке</br>\n   * - dispatcher Layout модуля </br>\n   * - dispatcher Page модуля </br>\n   * - dispatcher Embed модулей в произвольном порядке </br>\n   *\n   * @example\n   * dispatcher (path, state) {\n   *   console.log('dispatcher', this.constructor.name, path, state);\n   *   // Если путь my.site.com/moduleName/item/3\n   *   if (path[1] === 'item') this.showItem(state, path[2]);\n   * }\n   *\n   * @param {string} path - массив с элементами url адреса.\n   * @param {Object} state - данные переданные с url.\n   * @abstract\n   */\n  dispatcher() { }\n\n  /**\n  * Абстрактный метод. Монитирование модуля. </br>\n  * Метод автоматически вызывается для каждого модуля при изменении url адреса. </br>\n  * В методе доступны объекты currentModule и currentLayout. </br>\n  * Вызывается в следующем порядке: </br>\n  * - mounted Root модуля </br>\n  * - mounted всех Global модулей в произвольном порядке </br>\n  * - mounted Layout модуля </br>\n  * - mounted Page модуля </br>\n  * - mounted Embed модулей в произвольном порядке </br>\n  * @example\n  * mounted (module, layout) {\n  *   console.log('mounted', this.constructor.name, module, layout);\n  * }\n  *\n  * @param {Object} currentModule - текущий Page модуль.\n  * @param {Object} currentLayout - текущий Layout модуль.\n  * @abstract\n  */\n  mounted() { }\n}\n","class Watchers {\n  /**\n   * Приватный класс для создания и удаления наблюдателей для стора. </br>\n   *\n   * @Module Watchers\n   */\n  constructor() {\n    this._listeners = {};\n  }\n\n  /**\n   * Добавить наблюдателя для поля стейта. </br>\n   * @example <caption>Пример добавления</caption>\n   * import Module from 'ModuleName/module.js'\n   * const module = new Module()\n   *\n   * // Поле field1 - должно существовать в стейте\n   * module.$$store.watcher.field1.add('watcherName', (data) => {\n   *  conosole.log(data)\n   * })\n   *\n   * @param {string} name - название название наблюдателя.\n   * @param {function} cb - callback функция.\n   */\n  add(name, cb) {\n    this._listeners[name] = cb;\n  }\n\n  /**\n   * Удалить наблюдателя для поля стейта. </br>\n   * @example <caption>Пример удаления</caption>\n   * import Module from 'ModuleName/module.js'\n   * const module = new Module()\n   *\n   * // Поле field1 - должно существовать в стейте\n   * module.$$store.watcher.field1.remove('watcherName')\n   *\n   * @param {string} name - название наблюдателя.\n   */\n  remove(name) {\n    delete this._listeners[name];\n  }\n\n  /**\n   * Выполнить все callback функции\n   *\n   * @param {object} data - название название наблюдателя.\n   * @param {any} data.newValue - новое значение.\n   * @param {any} data.oldValue - старое значение.\n   * @param {object} data.state - текущий стейт.\n   * @private\n   */\n  emit(data) {\n    for (const name in this._listeners) {\n      this._listeners[name](data);\n    }\n  }\n}\n\nclass Store {\n  /**\n   * Класс определяет глобальный стор для всех модулей, каждый модуль имеет доступ к глобальному стору. </br>\n   * Стор создается 1 раз при инициализации приложения.\n   * Для инициализации стора желательно использовать метод initState() который необходимо описать в модуле root\n   * @example <caption>Пример инициализации стора</caption>\n   * export default class Root extends Onedeck.RootModule {\n   * initState() {\n   *  return {\n   *    field1: ....\n   *    field2: ....\n   *    ....\n   *  }\n   * }\n   * .....\n   *\n   * @example <caption>Пример использования стора</caption>\n   * import Module from 'ModuleName/module.js'\n   * const module = new Module()\n   * // создаем или изменяе поле в сторе\n   * module.$$store.state.field1 = 'new data'\n   *\n   * // Добавляем наблюдатель за данным полем, при изменении поля сработает колбек функция\n   * // name - произвольная строка, потом по этому имени мы можем удалить данный наблюдатель\n   * // cb   - функция, которая сработает при изменении данных в стейте\n   * module.$$store.watcher.field1.add('watcherName', (data) => {\n   *  conosole.log(data)\n   * })\n   *\n   * // Удаляем наблюдатель по имени\n   * module.$$store.watcher.field1.remove('watcherName')\n   *\n   * @Module Store\n   */\n  constructor(state = {}) {\n    this.state = new Proxy(state, {\n      get: (target, name) => target[name],\n      set: (obj, prop, value) => {\n        if (prop in this.watchers) {\n          this.watchers[prop].emit({\n            newValue: value,\n            oldValue: obj[prop],\n            state: obj,\n          });\n        }\n\n        obj[prop] = value;\n        return true;\n      },\n      has: (target, key) => key in target,\n    });\n\n    this.watchers = new Proxy({}, {\n      get: (target, name) => {\n        if (name in this.state) {\n          if (name in target) {\n            return target[name];\n          }\n          target[name] = new Watchers();\n          return target[name];\n        }\n\n        console.error(`no such ${name} in state`);\n        return null;\n      },\n      set: () => {\n        console.error('Watcher is read-only');\n        return false;\n      },\n      has: (target, key) => key in target,\n    });\n  }\n}\n\nexport default Store;\n","class Route {\n  /**\n     * Приватный класс для роутинга. </br>\n     *\n     * @Module Route\n     * @param {Core} core - объект ядра системы.\n     */\n  constructor(core) {\n    this.core = core;\n    this.urlState = [];\n  }\n\n  /**\n     * Приватный метод. Содержит обработку событий popstate или hashchange. </br>\n     * Обработка события popstate или hashchange зависит от параметра в конфиге historyApi\n     * @private\n     */\n  eventHandler() {\n    if (this.core.$$config.historyApi) {\n      window.addEventListener('popstate', (event) => {\n        const urlData = this.getModuleFromUrl(\n          document.location.pathname + document.location.search\n        );\n        this.core.initModule({\n          module: urlData.url,\n          path: document.location.pathname,\n          state: event.state,\n          queryParam: urlData.params,\n        });\n      });\n    } else {\n      window.addEventListener('hashchange', () => {\n        const urlData = this.getModuleFromUrl(\n          document.location.hash + document.location.search\n        );\n        this.core.initModule({\n          module: urlData.url,\n          path: document.location.hash,\n          state: this.urlState[document.location.hash.replace(/^#/, '')],\n          queryParam: urlData.params,\n        });\n      });\n    }\n  }\n\n  /**\n   * В каждом модуле содержиться метод $$route. </br>\n   * Метод необходим для реализации маршрутизации, так же может передавать данные.\n   * @example <caption>Создания события для роутинга</caption>\n   * this.$$on('onroute', (data) => this.$$route({\n   *     path: `/module_name/item/${data.id}`,\n   *     state: data\n   *  })\n   * @example  <caption>Переход на другую страницу</caption>\n   * import Module from 'ModuleName/module.js'\n   * const module = new Module()\n   *\n   * module.$$route({\n   *     path: '/module_name/item/1',\n   *     state: {\n   *         id: 1,\n   *         name: 'Example',\n   *         ...\n   *     },\n   *  })\n   *\n   * @param {Object} routeData - Объек содержит url и state.\n   * @param {string} routeData.path  - url, first element module name.\n   * @param {Object} routeData.state - state passed from the module.\n   */\n  route(routeData) {\n    let path = this.core.$$config.rootPath ? this.core.$$config.rootPath + routeData.path : routeData.path;\n    // Удалем двойные '//'\n    path = path.replace(/\\/\\//, '/');\n    if (this.core.$$config.historyApi) {\n      // Если используем history Api - вызываем инициализацию модуля\n      const urlData = this.getModuleFromUrl(path);\n      this.core.initModule({\n        module: urlData.url,\n        path,\n        state: routeData.state,\n        pushState: true,\n        queryParam: urlData.params,\n      });\n    } else {\n      // Если не используем - то сохраняем состояние, и переходим по нужному пути\n      // Далее вызовится событие \"hashchange\" - в котором и произойдет вызов метода initModule\n      this.urlState[path] = routeData.state;\n      document.location.hash = path;\n    }\n  }\n\n  /**\n  * Метод парсить текущий урл\n  * получаем название модуля и данные модуля url адреса,\n  * @param {String} url - url\n  * @returns {Arrat} массив сторк (разбитый урл адрес через / )\n  * @private\n  */\n  getModuleFromUrl(url) {\n    console.log('1111', url);\n    // Удалем ненужный нам путь\n    if (this.core.$$config.rootPath) {\n      url = url.replace(this.core.$$config.rootPath, '');\n    }\n\n    // Удалем первый '/' и #\n    url = url.replace(/^[\\/, #]/, '');\n\n    const [urlParam, queryParam] = url.split('?');\n    const params = {};\n\n    if (queryParam) {\n      queryParam.split('&').forEach((param) => {\n        const [key, val] = param.split('=');\n        params[key] = val;\n      });\n    }\n\n    url = urlParam.split('/');\n\n    return {\n      url,\n      params,\n    };\n  }\n\n  pushState(moduleData) {\n    window.history.pushState(\n      moduleData.state,\n      moduleData.module[0],\n      moduleData.path,\n    );\n  }\n}\n\nexport default Route;\n","import Stroe from './store';\nimport Router from './router';\n\nexport default class Core {\n  /**\n   * Ядро системы (Root Module). </br>\n   * Отвечает за создание и уничтожение всех модулей приложения.\n   * @Module Core\n   *\n   * @param {RootModule} root - главный модуль Root\n   */\n  constructor(root) {\n    this.root = root;\n    // this object contains config object\n    // конфиг, доступен в каждом модуле\n    // Присваиваем функцию import и удаляем ее из конфига\n    this.$$config = this.root.$$config;\n    this._import = this.$$config.import;\n    this.$$config.import = null;\n\n    // this object contains current module\n    // объект с текущим модулем\n    this.$$currentModule = {};\n    // this object contains current layout\n    // объект с текущим макетом\n    this.$$currentLayout = {};\n    // this object contains all modules\n    // объек содержит все модули приложения которые были инициализированы\n    this.modules = {};\n    // this object contains all layouts\n    // объек содержит все макеты приложения которые были инициализированы\n    this.layouts = {};\n\n    // cоздаем роутер\n    this.router = new Router(this);\n    // инициализируем глобальный store\n    this.$$gstore = new Stroe(this.root.initState());\n    this.root.$$gstore = this.$$gstore;\n\n    this._clear().then(() => { this.init(); });\n  }\n\n  _clear() {\n    return new Promise((resolve) => {\n      document.addEventListener('DOMContentLoaded', () => {\n        const scripts = document.querySelectorAll('script');\n        document.body.innerHTML = `<div id=\"${this.$$config.rootElementId}\"></div>`;\n        if (NodeList.prototype.isPrototypeOf(scripts)) {\n          scripts.forEach(s => document.body.appendChild(s));\n        }\n        resolve();\n      });\n    });\n  }\n\n  async init() {\n    // получаем массив с данными из url\n    const urlData = this.router.getModuleFromUrl(\n      this.$$config.historyApi\n      ? document.location.pathname + document.location.search\n      : document.location.hash + document.location.search,\n    );\n\n    // вызываем глобаьное событие popstate\n    this.router.eventHandler();\n\n    // вызывам метод init для модуля root\n    this.root.init(urlData.url, urlData.params);\n\n    try {\n      await this.initGlobalModules();\n    } catch (e) {\n      console.error('Error init global module', e);\n    }\n\n    // current module initialization\n    this.initModule({\n      module: urlData.url,\n      queryParam: urlData.params,\n      path: document.location.pathname,\n    });\n  }\n\n  /**\n  * Метод вызывает методы mounted всех модулей (см описание метода mounted)\n  * @private\n  */\n  mounted() {\n    this.root.mounted(this.$$currentModule, this.$$currentLayout);\n\n    Object.keys(this.modules)\n      .filter((moduleName) => this.modules[moduleName].$$global)\n      .forEach((moduleName) => {\n        this.modules[moduleName]\n          .mounted(this.$$currentModule, this.$$currentLayout);\n\n        // Встроенные модули\n        Object.keys(this.modules[moduleName].$$embed)\n          .forEach((name) => this.modules[moduleName].$$embed[name]\n            .mounted(this.$$currentModule, this.$$currentLayout));\n      });\n\n    if (this.$$currentLayout.obj) {\n      this.$$currentLayout.obj.mounted(this.$$currentModule, this.$$currentLayout);\n    }\n\n    if (this.$$currentModule.obj) {\n      this.$$currentModule.obj.mounted(this.$$currentModule, this.$$currentLayout);\n      Object\n        .keys(this.$$currentModule.obj.$$embed)\n        .forEach((name) => this.$$currentModule.obj.$$embed[name]\n          .mounted(this.$$currentModule, this.$$currentLayout));\n    }\n  }\n\n  /**\n  * Метод вызывает метд destroy Page модуля и Embed модуле (см описание метода destroy в классе Module)\n  * @private\n  */\n  destroyModule() {\n    // Если переход на новый макет то чистим модуль а потом макет\n    if (this.$$currentModule.obj) {\n      this.$$currentModule.obj.destroy();\n      Object\n        .keys(this.$$currentModule.obj.$$embed)\n        .forEach((name) => this.$$currentModule.obj.$$embed[name].destroy());\n      this.$$currentModule = {};\n    }\n  }\n\n  /**\n   * Метод вызывает метд destroy Layout модуля (см описание метода destroy в классе Module)\n   * @private\n   */\n  destroyLayout() {\n    if (this.$$currentLayout.obj) {\n      this.$$currentLayout.obj.destroy();\n      this.$$currentLayout = {};\n    }\n  }\n\n  /**\n  * Метод вызывает методы dispatcher всех модулей (см описание метода dispatcher)\n  * @param {Array} path - url array\n  * @param {Object} state - current state\n  * @param {Object} queryParam - параметры переданные вместе с url\n  * @private\n  */\n  dispatcherModule(path, state, queryParam) {\n    this.root.dispatcher(path, state, queryParam);\n    // Вызываем диспатчеры для глобальных модулей\n    Object.keys(this.modules)\n      .filter((moduleName) => this.modules[moduleName].$$global)\n      .forEach((moduleName) => {\n        this.modules[moduleName].dispatcher(path, state, queryParam);\n\n        // Встроенные модули\n        Object.keys(this.modules[moduleName].$$embed)\n          .forEach((name) => this.modules[moduleName].$$embed[name]\n            .dispatcher(path, state, queryParam));\n      });\n    // Если переход на новый макет то чистим модуль а потом макет\n    if (this.$$currentModule.obj) {\n      // Вызываем диспатчер для текущего модуля\n      this.$$currentModule.obj.dispatcher(path, state, queryParam);\n      // Вызываем диспатчеры для всторенных модулей\n      Object.keys(this.$$currentModule.obj.$$embed)\n        .forEach((name) => this.$$currentModule.obj.$$embed[name].dispatcher(path, state, queryParam));\n    }\n  }\n\n  initGlobalModules = async () => {\n    const globalNames = Object.keys(this.$$config.modules)\n      .filter((moduleName) => this.$$config.modules[moduleName].global);\n    for (let i = 0; i < globalNames.length; i++) {\n      // eslint-disable-next-line\n      await this.createModule(globalNames[i], this.$$config.modules[globalNames[i]])\n    }\n  }\n\n  /**\n  * Метод создает объект Page модуля и Embed модуля\n  * получаем название модуля и данные модуля url адреса,\n  * @param {String} moduleName - название модуля  (в конфиге параметр module)\n  * @param {Object} moduleConf - настройки модуля\n  * @private\n  */\n  createModule = async (moduleName, moduleConf) => {\n    // Если уже подгрузили module - выходим\n    if (this.modules[moduleName]) return;\n\n    let ModuleClass = await this._import(moduleConf.module);\n    if (!ModuleClass || !ModuleClass.default) {\n      throw new SyntaxError(`Error load module: ${moduleName}`);\n    }\n    ModuleClass = ModuleClass.default;\n\n    // создаем модуль\n    this.modules[moduleName] = new ModuleClass();\n    // глобальный модуль\n    this.modules[moduleName].$$global = moduleConf.global;\n    // добавляем метод route для маршрутизации\n    this.modules[moduleName].$$route = this.router.route.bind(this.router);\n    // добавляем метод  publish для публикации глобальных событий\n    this.modules[moduleName].$$gemit = this.root.$$emit.bind(this.root);\n    // глобальный стейт\n    this.modules[moduleName].$$gstore = this.$$gstore;\n    // конфиг\n    this.modules[moduleName].$$config = this.$$config;\n    // id элемента куда модуль встраивается\n    this.modules[moduleName].$$mountId = moduleConf.mountId;\n    // id элемента куда встроено приложение\n    this.modules[moduleName].$$rootElementId = this.$$config.rootElementId;\n\n    // макет модуля\n    this.modules[moduleName].$$layoutName = moduleConf.layout;\n    // встраиваемые модули\n    this.modules[moduleName].$$embed = {};\n\n    if (moduleConf.embed) {\n      const embedNames = Object.keys(moduleConf.embed);\n\n      for (let i = 0; i < embedNames.length; i++) {\n        // eslint-disable-next-line\n        let EmbedClass = await this._import(moduleConf.embed[embedNames[i]].module);\n        if (!EmbedClass || !EmbedClass.default) {\n          throw new SyntaxError(`Error load module: ${embedNames[i]}`);\n        }\n        EmbedClass = EmbedClass.default;\n\n        this.modules[moduleName].$$embed[embedNames[i]] = new EmbedClass();\n        this.modules[moduleName].$$embed[embedNames[i]].$$route = this.router.route.bind(this.router);\n        this.modules[moduleName].$$embed[embedNames[i]].$$gemit = this.root.$$emit.bind(this.root);\n        this.modules[moduleName].$$embed[embedNames[i]].$$gstore = this.$$gstore;\n        this.modules[moduleName].$$embed[embedNames[i]].$$config = this.$$config;\n        this.modules[moduleName].$$embed[embedNames[i]].$$rootElementId = this.$$config.rootElementId;\n        this.modules[moduleName].$$embed[embedNames[i]].$$mountId = moduleConf.embed[embedNames[i]].mountId;\n      }\n    }\n\n    // Если модуль глобальный - сразу его инициализируем\n    if (this.modules[moduleName].$$global) {\n      this.modules[moduleName].init(moduleName);\n\n      // Инициализируем встроенные модули\n      Object.keys(this.modules[moduleName].$$embed)\n        .forEach((name) => this.modules[moduleName].$$embed[name]\n          .init(moduleName));\n    }\n  }\n\n  /**\n  * Приватный метод. Cоздает объект Layout модуля\n  * получаем название модуля и данные модуля url адреса,\n  * @param {String} layoutName - название модуля  (в конфиге параметр layout)\n  * @private\n  */\n  createLayout = async (layoutName) => {\n    // Если уже подгрузили layout - выходим\n    if (this.layouts[layoutName]) return;\n\n    let LayoutClass = await this._import(layoutName);\n\n    if (!LayoutClass || !LayoutClass.default) {\n      throw new SyntaxError(`Error load module: ${layoutName}`);\n    }\n    LayoutClass = LayoutClass.default;\n\n    // создаем макет\n    this.layouts[layoutName] = new LayoutClass();\n    // добавляем метод route для маршрутизации\n    this.layouts[layoutName].$$route = this.router.route.bind(this.router);\n    // добавляем метод  publish для публикации глобальных событий\n    this.layouts[layoutName].$$gemit = this.root.$$emit.bind(this.root);\n    // глобальный стейт\n    this.layouts[layoutName].$$gstore = this.$$gstore;\n    // конфиг\n    this.layouts[layoutName].$$config = this.$$config;\n    this.layouts[layoutName].$$rootElementId = this.$$config.rootElementId;\n  }\n\n  /**\n   * Приватный метод инициализации модуля. </br>\n   * Инициализируем  Page Layout Embed модули в зависимости от url адресв\n   * @param {Object} moduleData - initn module data.\n   * @param {Array} moduleData.module - массив url адреса. В нулевом элементе module[0] содержиться имя модлуя.\n   * @param {Object} moduleData.queryParam - данные передданые в url.\n   * @param {string} moduleData.path - url.\n   * @param {Object} moduleData.state - current state.\n   * @param {boolean} moduleData.pushState - flag indicates save to history api.\n   * @private\n   */\n  initModule = async (moduleData) => {\n    const moduleName = moduleData.module[0];\n\n    const mudules = this.$$config.modules;\n\n    if (!moduleName) {\n      this.router.route({\n        path: this.$$config.mainModule,\n      });\n      return;\n    }\n\n    if (!mudules[moduleName]) {\n      this.router.route({\n        path: this.$$config.module404,\n      });\n      console.error('no such module:', moduleName);\n      return;\n    }\n\n    // Если это глобальный или встраиваемый модуль - они не учавствует в роутинге\n    if (mudules[moduleName].global) {\n      this.router.route({\n        path: this.$$config.module404,\n      });\n      console.error('global module:', moduleName);\n      return;\n    }\n\n    // Создаем макет если он есть\n    if (\n      mudules[moduleName].layout\n      && mudules[moduleName].layout === this.$$currentLayout.name\n    ) {\n      // Если переход внутри текущего макета\n      this.$$currentLayout.obj.dispatcher(moduleData.module, moduleData.state, moduleData.queryParam);\n    } else if (mudules[moduleName].layout) {\n      this.destroyModule();\n      this.destroyLayout();\n\n      // Если переход на новый макет то чистим модуль а потом макет\n      try {\n        await this.createLayout(mudules[moduleName].layout);\n      } catch (e) {\n        console.error(e);\n      }\n      // Cохраняем новый модуль в объекте currentModule\n      this.$$currentLayout = {\n        name: mudules[moduleName].layout,\n        obj: this.layouts[mudules[moduleName].layout],\n      };\n\n      // Инициализируем новый макет (вызываем метод init)\n      this.$$currentLayout.obj.init(moduleData.module, moduleData.state, moduleData.queryParam);\n    } else {\n      // Если у модуля нет макета - уничтожаем текущий макет\n      this.destroyModule();\n      this.destroyLayout();\n    }\n\n    // Если переход внутри текущего модуля - вызываем диспатчер модуля\n    if (\n      this.$$currentModule.name\n      && this.$$currentModule.name === moduleName\n    ) {\n      // Если переход внутри текущего модуля - вызываем диспатчер модуля (метода dispatcher)\n      this.dispatcherModule(moduleData.module, moduleData.state, moduleData.queryParam);\n    } else {\n      // Если переход на новый модуль - вызываем деструктор текущего модуля (метод destroy)\n      this.destroyModule();\n\n      // Если переход на новый макет то чистим модуль а потом макет\n      try {\n        await this.createModule(moduleName, mudules[moduleName]);\n      } catch (e) {\n        console.error(e);\n      }\n\n      // Cохраняем новый модуль в объекте currentModule\n      this.$$currentModule = {\n        name: moduleName,\n        obj: this.modules[moduleName],\n      };\n\n      // Инициализируем новый модуль (вызываем метод init)\n      this.$$currentModule.obj.init(moduleData.module, moduleData.state, moduleData.queryParam);\n      // Инициализируем встроенные модули\n      Object.keys(this.$$currentModule.obj.$$embed)\n        .forEach((name) => this.$$currentModule.obj.$$embed[name]\n          .init(moduleData.module, moduleData.state, moduleData.queryParam));\n\n      this.dispatcherModule(moduleData.module, moduleData.state, moduleData.queryParam);\n    }\n\n    // Если используем history api - сохраняем новое состояние в истоии браузера\n    if (moduleData.pushState && this.$$config.historyApi) {\n      this.router.pushState(moduleData);\n    }\n\n    // Вызываем методы жизненого цикла\n    this.mounted();\n  }\n}\n","import Module from './module';\nimport Core from './core';\n\nexport default class RootModule extends Module {\n  /**\n   * Класс является родителем для главного модуля (Root Module). </br>\n   * Наследуется от класса Module для реализации паттерна [Наблюдатель (Observer)]{@link https://refactoring.guru/ru/design-patterns/observer}. </br>\n   * Объект Root модуля реализует паттерн [Посредник (Mediator)]{@link https://refactoring.guru/ru/design-patterns/mediator}. </br>\n   * @Module RootModule\n   *\n   * @example\n   * import Onedeck from 'onedeck';\n   *\n   * export default class Root extends Onedeck.RootModule { ... }\n   *\n   * @param {Object} config - конфиг приложения (пример конфига в README.md)\n   */\n  constructor(config) {\n    super();\n    this.$$config = config;\n    new Core(this);\n  }\n\n  /**\n   * Абстрактный метод. Инициализация глобального состояния приложения. </br>\n   * Этот метод должен вернуть объект с описанием всех полей глобального состояния. </br>\n   * Метод вызывается 1 раз при инициализации всего приложения. </br>\n   *\n   * @example\n   * initState () {\n   *   return {\n   *     test1: {\n   *       test3: null,\n   *       test4: null,\n   *     },\n   *     test2: {\n   *       test5: null,\n   *       test6: null,\n   *     }\n   *     ...\n   *   }\n   * }\n   *\n   * @returns {object} - global state\n   * @abstract\n   */\n  initState() { return {}; }\n}\n","import Observable from './observ';\nimport Module from './module';\nimport RootModule from './root.module';\n\nexport default {\n  Observable,\n  Module,\n  RootModule,\n};\n"],"sourceRoot":""}