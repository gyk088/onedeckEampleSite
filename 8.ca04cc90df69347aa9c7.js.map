{"version":3,"sources":["webpack:///./src/modules/ExampleNotification/module.js","webpack:///./src/modules/ExampleNotification/css/main.css?ec9a","webpack:///./src/modules/ExampleNotification/css/main.css?b69c"],"names":["ExampleNotification","path","state","console","log","constructor","name","Notify","create","color","position","timeout","textColor","actions","icon","message","module","layout","text","Onedeck","Module"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;;;;;IAIqBA,mB;;;;;;;;;;;;;yBACdC,I,EAAMC,K,EAAO,CAChB;AACD;;;+BAEUD,I,EAAMC,K,EAAO;AACtBC,aAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKC,WAAL,CAAiBC,IAA3C,EAAiDL,IAAjD,EAAuDC,KAAvD;AACAK,2DAAM,CAACC,MAAP,CAAc;AACZC,aAAK,EAAE,MADK;AAEZC,gBAAQ,EAAE,WAFE;AAGZC,eAAO,EAAE,IAHG;AAIZC,iBAAS,EAAE,OAJC;AAKZC,eAAO,EAAE,CAAC;AAAEC,cAAI,EAAE,OAAR;AAAiBL,eAAK,EAAE;AAAxB,SAAD,CALG;AAMZM,eAAO,qBAAcd,IAAI,CAAC,CAAD,CAAlB;AANK,OAAd;AAQD;;;4BAEOe,M,EAAQC,M,EAAQ,CACtB;AACD;;;2BAEMC,I,EAAM;AACX;AACAX,2DAAM,CAACC,MAAP,CAAc;AACZE,gBAAQ,EAAE,KADE;AAEZC,eAAO,EAAE,GAFG;AAGZC,iBAAS,EAAE,OAHC;AAIZC,eAAO,EAAE,CAAC;AAAEC,cAAI,EAAE,OAAR;AAAiBL,eAAK,EAAE;AAAxB,SAAD,CAJG;AAKZM,eAAO,EAAEG;AALG,OAAd;AAOD;;;;EA9B8CC,uDAAO,CAACC,M;;;;;;;;;;ACRzD,cAAc,mBAAO,CAAC,GAAmL;;AAEzM,4CAA4C,QAAS;;AAErD;AACA;;;;AAIA,eAAe;;AAEf;AACA;;AAEA,aAAa,mBAAO,CAAC,EAAyD;;AAE9E;;AAEA,GAAG,KAAU,EAAE,E;;;;;;;ACnBf,uC","file":"8.ca04cc90df69347aa9c7.js","sourcesContent":["import Onedeck from 'onedeck';\nimport { Notify } from 'quasar';\nimport 'simple-notify/dist/simple-notify.min.css';\nimport 'ExampleNotification/css/main.css';\n\n/**\n * Class ExampleNotification\n * module use Vue\n */\nexport default class ExampleNotification extends Onedeck.Module {\n  init(path, state) {\n    // console.log('init', this.constructor.name, path, state);\n  }\n\n  dispatcher(path, state) {\n    console.log('dispatcher', this.constructor.name, path, state);\n    Notify.create({\n      color: 'teal',\n      position: 'top-right',\n      timeout: 5000,\n      textColor: 'white',\n      actions: [{ icon: 'close', color: 'white' }],\n      message: `MODULE : ${path[0]}`,\n    });\n  }\n\n  mounted(module, layout) {\n    // console.log('mounted', this.constructor.name, module, layout);\n  }\n\n  notify(text) {\n    // console.log('dispatcher', this.constructor.name, path, state);\n    Notify.create({\n      position: 'top',\n      timeout: 500,\n      textColor: 'white',\n      actions: [{ icon: 'close', color: 'white' }],\n      message: text,\n    });\n  }\n}\n","\nvar content = require(\"!!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js!./main.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js!./main.css\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js!./main.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// extracted by mini-css-extract-plugin"],"sourceRoot":""}